#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define MOUSE 5
#define SCROLL 6

#define JP_ZKHK  GRAVE        // Zenkaku ↔ Hankaku ↔ Kanji (半角 ↔ 全角 ↔ 漢字)
#define JP_MINUS MINUS        // -
#define JP_CARET EQUAL        // ^
#define JP_YEN   INT3         // ¥
#define JP_AT    LBKT         // @
#define JP_LBKT  RBKT         // [
#define JP_EISU  CAPS         // Eisū (英数)
#define JP_SEMI  SEMI         // ;
#define JP_COLON SQT          // :
#define JP_RBKT  NUHS         // ]
#define JP_COMMA COMMA        // ,
#define JP_DOT   DOT          // .
#define JP_SLASH SLASH        // /
#define JP_BSLH  INT1         // (backslash)
#define JP_MHEN  INT5         // Muhenkan (無変換)
#define JP_HENK  INT4         // Henkan (変換)
#define JP_KANA  INT2         // Katakana ↔ Hiragana ↔ Rōmaji (カタカナ ↔ ひらがな ↔ ローマ字)
#define JP_EXCL  LS(N1)       // !
#define JP_DQT   LS(N2)       // "
#define JP_HASH  LS(N3)       // #
#define JP_DLLR  LS(N4)       // $
#define JP_PRCNT LS(N5)       // %
#define JP_AMPS  LS(N6)       // &
#define JP_SQT   LS(N7)       // '
#define JP_LPAR  LS(N8)       // (
#define JP_RPAR  LS(N9)       // )
#define JP_EQUAL LS(JP_MINUS) // =
#define JP_TILDE LS(JP_CARET) // ~
#define JP_PIPE  LS(JP_YEN)   // |
#define JP_GRAVE LS(JP_AT)    // `
#define JP_LBRC  LS(JP_LBKT)  // {
#define JP_CAPS  LS(JP_EISU)  // Caps Lock
#define JP_PLUS  LS(JP_SEMI)  // +
#define JP_ASTRK LS(JP_COLON) // *
#define JP_RBRC  LS(JP_RBKT)  // }
#define JP_LT    LS(JP_COMMA) // <
#define JP_RT    LS(JP_DOT)   // >
#define JP_QMARK LS(JP_SLASH) // ?
#define JP_UNDER LS(JP_BSLH)  // _


&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&lt {
    quick-tap-ms = <300>;
    flavor = "balanced";
};

/ {
    combos {
        compatible = "zmk,combos";

        layer4_ESC {
            bindings = <&kp ESCAPE>;
            key-positions = <39 38>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 10>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };

        scroll_right_left: mouse_wheel_right_left {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_LEFT>, <&msc SCRL_RIGHT>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q           &kp W         &kp E         &kp R       &kp T                                     &kp Y             &kp U  &kp I     &kp O     &kp P
&kp A           &kp S         &kp D         &kp F       &kp G                          &mo 6      &kp H             &kp J  &kp K     &kp L     &kp ENTER
&kp LEFT_SHIFT  &kp Z         &kp X         &kp C       &kp V             &kp B        &mo 3      &kp N             &kp M  &mkp MB1  &mkp MB2  &kp RIGHT_SHIFT
&kp LCTRL       &kp LEFT_WIN  &kp LEFT_ALT  &kp DELETE  &lt 2 JP_EISU     &kp SPACE    &kp SPACE  &lt 1 JP_KANA                                &kp BACKSPACE
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_1 {
            bindings = <
&kp NUMBER_1    &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5                             &kp JP_LPAR           &kp JP_RPAR            &kp JP_MINUS   &kp JP_CARET  &kp JP_YEN
&kp NUMBER_6    &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0               &none         &none                 &none                  &none          &kp JP_AT     &kp JP_LBKT
&kp LEFT_SHIFT  &none         &none         &none         &none         &none        &kp JP_COMMA  &kp JP_DOT            &kp JP_SLASH           &kp JP_SEMI    &kp JP_COLON  &kp JP_RBKT
&kp LCTRL       &kp LEFT_WIN  &kp LEFT_ALT  &none         &none         &kp SPACE    &kp SPACE     &none                                                                     &kp BACKSPACE
            >;

            sensor-bindings = <&scroll_right_left>;
        };

        layer_2 {
            bindings = <
&kp JP_EXCL      &kp JP_DQT         &kp JP_HASH   &kp JP_DLLR  &kp JP_PRCNT                             &kp JP_AMPS       &kp JP_SQT    &kp JP_EQUAL  &kp JP_TILDE     &kp JP_PIPE
&none            &none              &none         &none        &none                     &none          &none             &none         &none         &kp JP_GRAVE     &kp JP_LBRC
&kp LEFT_SHIFT   &none              &none         &none        &none        &none        &kp JP_LT      &kp JP_RT         &kp JP_QMARK  &kp JP_PLUS   &kp JP_ASTRK     &kp JP_RBRC
&kp LCTRL        &kp LEFT_WIN       &kp LEFT_ALT  &none        &none        &kp SPACE    &kp SPACE      &none                                                          &kp JP_UNDER
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_3 {
            bindings = <
&kp F1     &kp F2    &kp F3    &kp F4   &kp F5                           &none  &none  &none  &none  &none
&kp F6     &kp F7    &kp F8    &kp F9   &kp F10               &none      &none  &none  &none  &none  &none
&kp LSHFT  &none     &none     &kp F11  &kp F12  &none        &none      &none  &none  &none  &none  &none
&kp LCTRL  &kp LALT  &kp LGUI  &none    &none    &kp SPACE    &kp SPACE  &none                       &kp BSPC
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        layer_4 {
            bindings = <
&none  &none  &none  &none  &none                        &none  &none  &none  &none  &none
&none  &none  &none  &none  &none           &none        &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &bootloader  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none        &none                       &none
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        MOUSE {
            bindings = <
&trans  &trans    &trans    &trans    &trans                    &trans  &trans    &trans    &trans    &trans
&trans  &mkp MB3  &mkp MB2  &mkp MB1  &trans            &trans  &trans  &mkp MB1  &mkp MB2  &mkp MB3  &trans
&trans  &trans    &trans    &trans    &trans  &trans    &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans    &trans    &trans    &trans  &trans    &trans  &trans                                &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        SCROLL {
            bindings = <
&kp PRINTSCREEN  &sys_reset    &none         &kp UP_ARROW    &none                              &none     &kp UP_ARROW    &none      &bt BT_SEL 3  &bt BT_SEL 0
&none            &none         &kp LEFT      &kp DOWN_ARROW  &kp RIGHT               &none      &kp LEFT  &kp DOWN_ARROW  &kp RIGHT  &bt BT_SEL 4  &bt BT_SEL 1
&kp LEFT_SHIFT   &none         &none         &none           &none      &none        &none      &none     &none           &mkp MB1   &mkp MB2      &bt BT_SEL 2
&kp LCTRL        &kp LEFT_WIN  &kp LEFT_ALT  &none           &none      &kp SPACE    &kp SPACE  &none                                              &bt BT_CLR_ALL
            >;

            sensor-bindings = <&scroll_right_left>;
        };
    };
};
